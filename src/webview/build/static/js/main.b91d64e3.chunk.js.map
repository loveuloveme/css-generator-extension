{"version":3,"sources":["components/TypeSelector/index.js","components/RangeController/index.js","util.js","components/PointInf/index.js","App.js","index.js","reportWebVitals.js"],"names":["TypeSelector","type","setType","className","onClick","Range","Slider","initialValue","color","x","r","g","b","a","RangeController","values","setValues","angle","setAngle","useState","isRangeSelect","setIsRangeSelect","addPoint","x1","x2","colorValues","push","length","Math","floor","sort","railStyle","backgroundColor","trackStyle","handleStyle","border","boxShadow","value","onChange","min","max","disabled","map","item","data","forEach","index","allowCross","step","pushable","background","style","width","hex","result","exec","parseInt","rgb","match","toString","slice","PointInf","changeValue","removeAction","removeEnabled","element","useRef","useEffect","_value","Util","updateValue","ref","defaultValues","App","vscode","y","colorPicker","setColorPicker","selectedValue","setSelectedValue","noEditor","setNoEditor","isInnerData","setIsInnerData","window","addEventListener","event","message","command","util","arg","generatedFunction","generateFunction","postMessage","text","e","changeColor","_colorPickerPos","rect","current","getBoundingClientRect","position","zIndex","left","top","right","bottom","splice","removeValue","selected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","acquireVsCodeApi","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b91d64e3.chunk.js","sourcesContent":["import './index.scss';\r\n\r\nfunction TypeSelector({type, setType}){\r\n    return(\r\n        <div className=\"type\">\r\n            <div\r\n                className={\"type-item \" + (type === 0 ? 'selected' : '')}\r\n                onClick={() => setType(0)}\r\n            >\r\n                Linear\r\n            </div>\r\n            <div\r\n                className={\"type-item \" + (type === 1 ? 'selected' : '')}\r\n                onClick={() => setType(1)}\r\n            >\r\n                Radial\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TypeSelector;","import './index.scss';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport Slider from 'rc-slider';\r\nimport { useState } from 'react';\r\n\r\nconst { Range } = Slider;\r\n\r\nconst initialValue = {\r\n    color: '#fff',\r\n    x: 50,\r\n    r: '255',\r\n    g: '255',\r\n    b: '255',\r\n    a: '1'\r\n};\r\n\r\nfunction RangeController({values, setValues, angle, setAngle, type}){\r\n    const [isRangeSelect, setIsRangeSelect] = useState(false);\r\n\r\n    let handleChange = data => {\r\n        let colorValues = [...values];\r\n\r\n        colorValues.forEach((item, index) => {\r\n            item.x = data[index];\r\n        })\r\n\r\n        setValues(colorValues);\r\n    }\r\n\r\n    let addPoint = (x1, x2) => {\r\n        let colorValues = [...values];\r\n\r\n        colorValues.push({...initialValue});\r\n        colorValues[colorValues.length - 1].x = Math.floor((x1+x2)/2);\r\n        colorValues.sort(function(a, b) {\r\n            return a.x - b.x;\r\n        });\r\n\r\n        setValues(colorValues);\r\n        setIsRangeSelect(false);\r\n    };\r\n\r\n    return(\r\n        <div className=\"slider-wrapper section\">\r\n\r\n            <div className={\"section-title\" + (type === 1 ? ' disabled': '')}>\r\n                Angle\r\n            </div>\r\n            <div className={\"slider-wrapper-angle\" + (type === 1 ? ' disabled': '')}>\r\n                <Slider\r\n                    className=\"angle-slider\" \r\n                    railStyle={{backgroundColor: '#828282'}}\r\n                    trackStyle={{backgroundColor: '#fff'}}\r\n                    handleStyle={{\r\n                        border: 'none',\r\n                        boxShadow: 'none'\r\n                    }}\r\n                    value={angle}\r\n                    onChange={setAngle}\r\n                    min={0}\r\n                    max={360}\r\n                    disabled={type === 1}\r\n                />\r\n                <div className=\"angle\">\r\n                    {angle}<span>deg</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"section-title\">\r\n                Range\r\n            </div>\r\n\r\n            {!isRangeSelect && \r\n                <Range\r\n                    value={values.map(item => item.x)}\r\n                    onChange={handleChange}\r\n                    allowCross={false}\r\n                    step={1}\r\n                    pushable={1}\r\n                    min={0}\r\n                    max={100}\r\n                    className=\"range-slider\"\r\n\r\n                    // activeDotStyle={{\r\n                    //     backgroundColor: 'red'\r\n                    // }}\r\n\r\n                    trackStyle={values.map((item, index) => {\r\n                        if(index < values.length - 1){\r\n                            return {\r\n                                background: `linear-gradient(90deg, ${item.color} 0%, ${values[index + 1].color} 100%)`,\r\n                            }\r\n                        }\r\n                    })}\r\n\r\n                    handleStyle={values.map(item => {\r\n                        return {\r\n                            backgroundColor: `rgba(${item.r}, ${item.g}, ${item.b}, ${item.a})`,\r\n                            border: 'none',\r\n                            boxShadow: 'none'\r\n                        }\r\n                    })}\r\n\r\n                    railStyle={{ backgroundColor: '#828282'}}\r\n                />\r\n            }\r\n\r\n            {isRangeSelect && \r\n                <div className=\"range-selector-wrapper\">\r\n                    <div\r\n                        className=\"range-selector-wrapper-cancel\"\r\n                        onClick={() => setIsRangeSelect(false)}\r\n                    >cancel</div>\r\n                    <div className=\"range-selector\">\r\n                        {values.map((item, index) => {\r\n                            if(index < values.length - 1){\r\n                                return <>\r\n                                    {index == 0 &&\r\n                                        <div\r\n                                            style={{\r\n                                                background: `#fff`,\r\n                                                width: `${values[0].x}%`\r\n                                            }}\r\n                                            className=\"range-selector-item\"\r\n                                            onClick={() => addPoint(0, values[0].x)}\r\n                                        ></div>\r\n                                    }\r\n                                    {index != 0 && index != values.length - 1 && <div className=\"range-selector-separator\"></div>}\r\n                                    <div\r\n                                        style={{\r\n                                            background: `linear-gradient(90deg, ${item.color} 0%, ${values[index + 1].color} 100%)`,\r\n                                            width: `${values[index + 1].x-item.x}%`\r\n                                        }}\r\n                                        className=\"range-selector-item\"\r\n                                        onClick={() => addPoint(item.x, values[index + 1].x)}\r\n                                    ></div>\r\n                                </>\r\n                            }else{\r\n                                return <div\r\n                                    style={{\r\n                                        background: `#fff`,\r\n                                        width: `${100 - values[values.length - 1].x}%`\r\n                                    }}\r\n                                    className=\"range-selector-item\"\r\n                                    onClick={() => addPoint(values[values.length - 1].x, 100)}\r\n                                ></div>\r\n                            }\r\n\r\n                        })}\r\n                    </div>\r\n                    <div className=\"range-selector-wrapper-info\">Choose range</div>\r\n                </div>\r\n            }\r\n\r\n            {!isRangeSelect && \r\n                <div\r\n                    className=\"slider-add\"\r\n                    onClick={() => setIsRangeSelect(true)}\r\n                >\r\n                    Add Point\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RangeController;","export default {\r\n    hexToRgb: function(hex) {\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n          r: parseInt(result[1], 16),\r\n          g: parseInt(result[2], 16),\r\n          b: parseInt(result[3], 16)\r\n        } : {\r\n            r: 0,\r\n            g: 0,\r\n            b: 0\r\n        };\r\n    },\r\n    RgbAToHex: function(rgb){\r\n        rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n        return (rgb && rgb.length === 4) ? \"#\" +\r\n         (\"0\" + parseInt(rgb[1],10).toString(16)).slice(-2) +\r\n         (\"0\" + parseInt(rgb[2],10).toString(16)).slice(-2) +\r\n         (\"0\" + parseInt(rgb[3],10).toString(16)).slice(-2) : '';\r\n    },\r\n    isNumeric: function(str) {\r\n        if (typeof str != \"string\") return false;\r\n        return !isNaN(str) && !isNaN(parseFloat(str));\r\n      }\r\n};","import './index.scss';\r\nimport Util from '../../util'\r\nimport {useEffect, useRef} from 'react';\r\n\r\nfunction PointInf({value, changeValue, onClick, index, removeAction, removeEnabled}){\r\n    const element = useRef();\r\n\r\n    useEffect(() => {\r\n        let _value = {...value};\r\n        let rgb = Util.hexToRgb(value.color);\r\n        _value.r = rgb.r;\r\n        _value.g = rgb.g;\r\n        _value.b = rgb.b;\r\n\r\n        updateValue(_value);\r\n    }, []);\r\n\r\n\r\n    let updateValue = (_value) => {\r\n        _value.color = Util.RgbAToHex(`rgb(${parseInt(_value.r) || 0}, ${parseInt(_value.g) || 0}, ${parseInt(_value.b) || 0})`);\r\n        changeValue(_value);\r\n    };\r\n\r\n    return(\r\n        <div\r\n            className=\"point-inf\"\r\n        >\r\n            <div className=\"point-inf-id\">#{index}</div>\r\n            <div className=\"point-inf-color\">rgba({value.r}, {value.g}, {value.b}, {value.a/1})</div>\r\n            <div className=\"point-inf-wrapper\">\r\n                <div\r\n                    className=\"color\"\r\n                    ref={element}\r\n                    onClick={() => onClick(element)}\r\n                    style={{\r\n                        backgroundColor: value.color\r\n                    }}\r\n                >\r\n                    <span>{value.color}</span>\r\n                </div>\r\n                <div className=\"color-inf\">\r\n                    <div className=\"position\">\r\n                        {`${value.x}%`}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                onClick={removeEnabled ? removeAction : () => {}}\r\n                className={\"position-remove \" + (!removeEnabled ? 'disabled' : '')}\r\n            >\r\n                remove\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PointInf;","import './base/scroll-bar.scss';\nimport './base/userSelect.scss';\n\nimport {useState, useEffect} from 'react';\nimport { ChromePicker } from 'react-color'\n\nimport TypeSelector from './components/TypeSelector';\nimport RangeController from './components/RangeController';\nimport PointInf from './components/PointInf';\nimport './App.scss';\n\nimport util from './util.js';\n\nlet defaultValues = {\n    values: [\n        {\n            color: '#e74c3c',\n            x: 0,\n            r: '255',\n            g: '59',\n            b: '48',\n            a: '1'\n        },\n        {\n            color: '#4B29D2',\n            x: 50,\n            r: '75',\n            g: '41',\n            b: '210',\n            a: '1'\n        }, \n        {\n            color: '#3498db',\n            x: 100,\n            r: '10',\n            g: '132',\n            b: '255',\n            a: '1'\n        }, \n    ],\n    angle: 45\n};\n\nfunction App({vscode}) {\n    const [type, setType] = useState(0);\n    const [angle, setAngle] = useState(defaultValues.angle);\n\n    const [colorPicker, setColorPicker] = useState({x: -1, y: -1});\n    const [selectedValue, setSelectedValue] = useState(-1);\n\n    const [values, setValues] = useState([...defaultValues.values]);\n\n    const [noEditor, setNoEditor] = useState(true);\n    const [isInnerData, setIsInnerData] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener('message', event => {\n            const message = event.data;\n\n            switch(message.command){\n                case 'editor-changed':\n                    setNoEditor(false);\n                    setValues([...defaultValues.values]);\n                    setAngle(defaultValues.angle)\n                    break;\n                case 'editor-lost':\n                    setNoEditor(true);\n                    break;\n                case 'editor-data':\n                    setIsInnerData(true)\n                    setValues(message.data.values.map(item => {\n                        return {\n                            color: util.RgbAToHex(`rgba(${item.r}, ${item.g}, ${item.b}, ${item.a})`),\n                            x: item.x,\n                            r: `${item.r}`,\n                            g: `${item.g}`,\n                            b: `${item.b}`,\n                            a: `${item.a}`\n                        };\n                    }));\n\n                    setType(message.data.type);\n\n                    if(message.data.type == 0){\n                        setAngle(message.data.arg);\n                    }\n\n                    setNoEditor(false);\n\n                    setIsInnerData(false);\n                    break;\n            }\n        });\n    }, []);\n\n\n    useEffect(() => {\n        try{\n            if(!isInnerData){\n                let generatedFunction = generateFunction();\n                vscode.postMessage({\n                    command: 'css-code',\n                    text: `background: -moz-${generatedFunction};\\r\\nbackground: -webkit-${generatedFunction};\\r\\nbackground: ${generatedFunction};`\n                });\n            }\n        }catch(e){\n            setNoEditor(true);\n        }\n    }, [values, angle, type]);\n\n    let changeColor = (index, value) => {\n        let colorValues = [...values];\n        colorValues[index] = value;\n\n        setValues(colorValues);\n    };\n\n    let removeValue = (index) => {\n        let colorValues = [...values];\n        colorValues.splice(index, 1);\n\n        setValues(colorValues);\n    }\n\n    let generateFunction = () => {\n        return `${type == 0 ? 'linear' : 'radial'}-gradient(${type == 0 ? `${angle}deg` : 'circle'} ,${values.map(item => `rgba(${item.r}, ${item.g}, ${item.b}, ${item.a}) ${item.x}%`)})`;\n    }\n\n    let _colorPickerPos = element => {\n        let rect = element.current.getBoundingClientRect();\n        setColorPicker({x: rect.x + rect.width - 50, y: rect.y - 200}); \n    }\n\n    if(noEditor){\n        return(\n            <div className=\"info-banner\">\n                <div className=\"info-banner-content\">\n                    Waiting for editor\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"App\">\n            <div \n                //className=\"color-picker-wrapper\"\n                style={{\n                    position: 'absolute',\n                    zIndex: 100,\n                    left: colorPicker.x,\n                    top: colorPicker.y,\n                }}\n            >\n                {selectedValue != -1 ?\n                    <>\n                        <div\n                            style={{\n                                position: 'fixed',\n                                top: '0px',\n                                right: '0px',\n                                bottom: '0px',\n                                left: '0px'\n                            }}\n\n                            onClick={() => setSelectedValue(-1)}\n                        />\n                        <ChromePicker\n                            color={{\n                                r: values[selectedValue].r,\n                                g: values[selectedValue].g,\n                                b: values[selectedValue].b,\n                                a: values[selectedValue].a,\n                            }}\n                            onChange={(rgb) => {\n                                let _value = {...values[selectedValue]};\n                                _value.color = rgb.hex;\n                                _value.r = rgb.rgb.r;\n                                _value.g = rgb.rgb.g;\n                                _value.b = rgb.rgb.b;\n                                _value.a = rgb.rgb.a;\n\n                                changeColor(selectedValue, _value);\n                            }}\n                        />\n                    </>\n                : null}\n            </div>\n            <div className=\"bg-preview\">\n                <div\n                    className=\"bg-preview-content\"\n                    style={{\n                        background: generateFunction()\n                    }}\n                >\n                </div>\n                <TypeSelector type={type} setType={setType} />\n            </div>\n            <div className=\"control\">\n                <RangeController type={type} values={values} setValues={setValues} angle={angle} setAngle={setAngle}/>\n                <div className=\"points section\">\n                <div className=\"section-title\">Color Information</div>\n                    <div className=\"points-wrapper\">\n                        {values.map((item, index) => \n                            <PointInf\n                                value={item}\n\n                                onClick={(element) => {\n                                    setSelectedValue(index);\n                                    \n                                    _colorPickerPos(element);\n\n                                    window.addEventListener('resize',  () => {\n                                        _colorPickerPos(element);\n                                    });\n                                }}\n\n                                removeAction={() => removeValue(index)}\n                                changeValue={value => {\n                                    changeColor(index, value);\n                                }}\n                                removeEnabled={values.length > 2}\n                                index={index}\n                                key={index}\n                                selected={index == selectedValue}\n                            />\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nvar vscode;\n\ntry{\n    vscode = window.acquireVsCodeApi();\n}catch(e){\n\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App vscode={vscode} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"],"sourceRoot":""}