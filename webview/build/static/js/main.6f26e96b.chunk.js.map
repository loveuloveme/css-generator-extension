{"version":3,"sources":["components/TypeSelector/index.js","components/RangeController/index.js","util.js","components/PointInf/index.js","App.js","index.js","reportWebVitals.js"],"names":["TypeSelector","type","setType","className","onClick","Range","Slider","initialValue","color","x","r","g","b","a","RangeController","values","setValues","angle","setAngle","railStyle","backgroundColor","trackStyle","handleStyle","border","boxShadow","value","onChange","min","max","disabled","map","item","data","colorValues","forEach","index","allowCross","step","pushable","length","background","push","sort","hex","result","exec","parseInt","rgb","match","toString","slice","PointInf","changeValue","removeAction","removeEnabled","element","useRef","useEffect","_value","Util","updateValue","ref","style","App","vscode","useState","y","colorPicker","setColorPicker","selectedValue","setSelectedValue","generatedFunction","generateFunction","postMessage","command","text","e","changeColor","_colorPickerPos","rect","current","getBoundingClientRect","width","position","zIndex","left","top","right","bottom","window","addEventListener","splice","removeValue","selected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","acquireVsCodeApi","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f26e96b.chunk.js","sourcesContent":["import './index.scss';\r\n\r\nfunction TypeSelector({type, setType}){\r\n    return(\r\n        <div className=\"type\">\r\n            <div\r\n                className={\"type-item \" + (type === 0 ? 'selected' : '')}\r\n                onClick={() => setType(0)}\r\n            >\r\n                Linear\r\n            </div>\r\n            <div\r\n                className={\"type-item \" + (type === 1 ? 'selected' : '')}\r\n                onClick={() => setType(1)}\r\n            >\r\n                Radial\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TypeSelector;","import './index.scss';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport Slider from 'rc-slider';\r\n\r\nconst { Range } = Slider;\r\n\r\nconst initialValue = {\r\n    color: '#fff',\r\n    x: 50,\r\n    r: '255',\r\n    g: '255',\r\n    b: '255',\r\n    a: '1'\r\n};\r\n\r\nfunction RangeController({values, setValues, angle, setAngle, type}){\r\n    let handleChange = data => {\r\n        let colorValues = [...values];\r\n\r\n        colorValues.forEach((item, index) => {\r\n            item.x = data[index];\r\n        })\r\n\r\n        setValues(colorValues);\r\n    }\r\n\r\n    let addPoint = () => {\r\n        let colorValues = [...values];\r\n\r\n        colorValues.push({...initialValue});\r\n\r\n        colorValues.sort(function(a, b) {\r\n            return a.x - b.x;\r\n        });\r\n\r\n        setValues(colorValues);\r\n    };\r\n\r\n\r\n    return(\r\n        <div className=\"slider-wrapper section\">\r\n\r\n            <div className={\"section-title\" + (type === 1 ? ' disabled': '')}>\r\n                Angle\r\n            </div>\r\n            <div className={\"slider-wrapper-angle\" + (type === 1 ? ' disabled': '')}>\r\n                <Slider\r\n                    className=\"angle-slider\" \r\n                    railStyle={{backgroundColor: '#828282'}}\r\n                    trackStyle={{backgroundColor: '#fff'}}\r\n                    handleStyle={{\r\n                        border: 'none',\r\n                        boxShadow: 'none'\r\n                    }}\r\n                    value={angle}\r\n                    onChange={setAngle}\r\n                    min={0}\r\n                    max={360}\r\n                    disabled={type === 1}\r\n                />\r\n                <div className=\"angle\">\r\n                    {angle}<span>deg</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"section-title\">\r\n                Range\r\n            </div>\r\n            <Range\r\n                value={values.map(item => item.x)}\r\n                onChange={handleChange}\r\n                allowCross={false}\r\n                step={1}\r\n                pushable={1}\r\n                min={0}\r\n                max={100}\r\n                className=\"range-slider\"\r\n\r\n                // activeDotStyle={{\r\n                //     backgroundColor: 'red'\r\n                // }}\r\n\r\n                trackStyle={values.map((item, index) => {\r\n                    if(index < values.length - 1){\r\n                        return {\r\n                            background: `linear-gradient(90deg, ${item.color} 0%, ${values[index + 1].color} 100%)`,\r\n                        }\r\n                    }\r\n                })}\r\n\r\n                handleStyle={values.map(item => {\r\n                    return {\r\n                        backgroundColor: `rgba(${item.r}, ${item.g}, ${item.b}, ${item.a})`,\r\n                        border: 'none',\r\n                        boxShadow: 'none'\r\n                    }\r\n                })}\r\n\r\n                railStyle={{ backgroundColor: '#828282'}}\r\n            />\r\n\r\n            <div\r\n                className=\"slider-add\"\r\n                onClick={addPoint}\r\n            >\r\n                Add Point\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RangeController;","export default {\r\n    hexToRgb: function(hex) {\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n          r: parseInt(result[1], 16),\r\n          g: parseInt(result[2], 16),\r\n          b: parseInt(result[3], 16)\r\n        } : {\r\n            r: 0,\r\n            g: 0,\r\n            b: 0\r\n        };\r\n    },\r\n    RgbAToHex: function(rgb){\r\n        rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n        return (rgb && rgb.length === 4) ? \"#\" +\r\n         (\"0\" + parseInt(rgb[1],10).toString(16)).slice(-2) +\r\n         (\"0\" + parseInt(rgb[2],10).toString(16)).slice(-2) +\r\n         (\"0\" + parseInt(rgb[3],10).toString(16)).slice(-2) : '';\r\n    },\r\n    isNumeric: function(str) {\r\n        if (typeof str != \"string\") return false;\r\n        return !isNaN(str) && !isNaN(parseFloat(str));\r\n      }\r\n};","import './index.scss';\r\nimport Util from '../../util'\r\nimport {useEffect, useRef} from 'react';\r\n\r\nfunction PointInf({value, changeValue, onClick, index, removeAction, removeEnabled}){\r\n    const element = useRef();\r\n\r\n    useEffect(() => {\r\n        let _value = {...value};\r\n        let rgb = Util.hexToRgb(value.color);\r\n        _value.r = rgb.r;\r\n        _value.g = rgb.g;\r\n        _value.b = rgb.b;\r\n\r\n        updateValue(_value);\r\n    }, []);\r\n\r\n\r\n    let updateValue = (_value) => {\r\n        _value.color = Util.RgbAToHex(`rgb(${parseInt(_value.r) || 0}, ${parseInt(_value.g) || 0}, ${parseInt(_value.b) || 0})`);\r\n        changeValue(_value);\r\n    };\r\n\r\n    return(\r\n        <div\r\n            className=\"point-inf\"\r\n        >\r\n            <div className=\"point-inf-id\">#{index}</div>\r\n            <div className=\"point-inf-color\">rgba({value.r}, {value.g}, {value.b}, {value.a/1})</div>\r\n            <div className=\"point-inf-wrapper\">\r\n                <div\r\n                    className=\"color\"\r\n                    ref={element}\r\n                    onClick={() => onClick(element)}\r\n                    style={{\r\n                        backgroundColor: value.color\r\n                    }}\r\n                ></div>\r\n                <div className=\"color-inf\">\r\n                    <div className=\"position\">\r\n                        {`${value.x}%`}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                onClick={removeEnabled ? removeAction : () => {}}\r\n                className={\"position-remove \" + (!removeEnabled ? 'disabled' : '')}\r\n            >\r\n                remove\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PointInf;","import './base/scroll-bar.scss';\nimport './base/userSelect.scss';\n\nimport {useState, useEffect} from 'react';\nimport { ChromePicker } from 'react-color'\n\nimport TypeSelector from './components/TypeSelector';\nimport RangeController from './components/RangeController';\nimport PointInf from './components/PointInf';\n\nimport './App.scss';\n\nfunction App({vscode}) {\n    const [type, setType] = useState(0);\n    const [angle, setAngle] = useState(45);\n\n    const [colorPicker, setColorPicker] = useState({x: -1, y: -1});\n    const [selectedValue, setSelectedValue] = useState(-1);\n\n    const [values, setValues] = useState(\n        [\n            {\n                color: '#e74c3c',\n                x: 0,\n                r: '255',\n                g: '59',\n                b: '48',\n                a: '1'\n            },\n            {\n                color: '#4B29D2',\n                x: 50,\n                r: '75',\n                g: '41',\n                b: '210',\n                a: '1'\n            }, \n            {\n                color: '#3498db',\n                x: 100,\n                r: '10',\n                g: '132',\n                b: '255',\n                a: '1'\n            }, \n        ]\n    );\n\n\n    useEffect(() => {\n        try{\n            let generatedFunction = generateFunction();\n            vscode.postMessage({\n                command: 'css-code',\n                text: `background: -moz-${generatedFunction};\\r\\nbackground: -webkit-${generatedFunction};\\r\\nbackground: ${generatedFunction};`\n            });\n        }catch(e){\n\n        }\n    }, [values, angle, type]);\n\n    let changeColor = (index, value) => {\n        let colorValues = [...values];\n        colorValues[index] = value;\n\n        setValues(colorValues);\n    };\n\n    let removeValue = (index) => {\n        let colorValues = [...values];\n        colorValues.splice(index, 1);\n\n        setValues(colorValues);\n    }\n\n    let generateFunction = () => {\n        return `${type == 0 ? 'linear' : 'radial'}-gradient(${type == 0 ? `${angle}deg` : 'circle'} ,${values.map(item => `rgba(${item.r}, ${item.g}, ${item.b}, ${item.a}) ${item.x}%`)})`;\n    }\n\n    let _colorPickerPos = element => {\n        let rect = element.current.getBoundingClientRect();\n        setColorPicker({x: rect.x + rect.width - 50, y: rect.y - 200}); \n    }\n\n    return (\n        <div className=\"App\">\n            <div \n                style={{\n                    position: 'absolute',\n                    zIndex: 100,\n                    left: colorPicker.x,\n                    top: colorPicker.y,\n                }}\n            >\n                {selectedValue != -1 ?\n                    <>\n                        <div\n                            style={{\n                                position: 'fixed',\n                                top: '0px',\n                                right: '0px',\n                                bottom: '0px',\n                                left: '0px'\n                            }}\n\n                            onClick={() => setSelectedValue(-1)}\n                        />\n                        <ChromePicker\n                            color={{\n                                r: values[selectedValue].r,\n                                g: values[selectedValue].g,\n                                b: values[selectedValue].b,\n                                a: values[selectedValue].a,\n                            }}\n                            onChange={(rgb) => {\n                                let _value = {...values[selectedValue]};\n                                _value.color = rgb.hex;\n                                _value.r = rgb.rgb.r;\n                                _value.g = rgb.rgb.g;\n                                _value.b = rgb.rgb.b;\n                                _value.a = rgb.rgb.a;\n\n                                changeColor(selectedValue, _value);\n                            }}\n                        />\n                    </>\n                : null}\n            </div>\n            <div className=\"bg-preview\">\n                <div\n                    className=\"bg-preview-content\"\n                    style={{\n                        background: generateFunction()\n                    }}\n                >\n                </div>\n                <TypeSelector type={type} setType={setType} />\n            </div>\n            <div className=\"control\">\n                <RangeController type={type} values={values} setValues={setValues} angle={angle} setAngle={setAngle}/>\n                <div className=\"points section\">\n                <div className=\"section-title\">Color Information</div>\n                    <div className=\"points-wrapper\">\n                        {values.map((item, index) => \n                            <PointInf\n                                value={item}\n\n                                onClick={(element) => {\n                                    setSelectedValue(index);\n                                    \n                                    _colorPickerPos(element);\n\n                                    window.addEventListener('resize',  () => {\n                                        _colorPickerPos(element);\n                                    });\n                                }}\n\n                                removeAction={() => removeValue(index)}\n                                changeValue={value => {\n                                    changeColor(index, value);\n                                }}\n                                removeEnabled={values.length > 2}\n                                index={index}\n                                key={index}\n                                selected={index == selectedValue}\n                            />\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nvar vscode;\n\ntry{\n    vscode = window.acquireVsCodeApi();\n}catch(e){\n\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App vscode={vscode} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"],"sourceRoot":""}